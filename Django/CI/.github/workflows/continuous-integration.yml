# This workflow will install Python dependencies, run tests and push to Heroku


name: Kotoko Express Dashboard CI

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: ${{secrets.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
          POSTGRES_DB: ${{secrets.POSTGRES_DB}}

        ports:
          - 5432:5432
        # needed because the postgres container does not provide a health check
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
          

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
   
    - name: psycopg2 prerequistes
      run: sudo apt-get install libpq-dev
      
    - name: Install Pipenv
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        
    - name: Install dependencies
      run: |
        pipenv install
        
    - name: Run migrations
      env:
        SECRET_KEY: ${{secrets.SECRET_KEY}}
        POSTGRES_HOST: ${{secrets.POSTGRES_HOST}}
        POSTGRES_PORT: ${{secrets.POSTGRES_PORT}}
        POSTGRES_USER: ${{secrets.POSTGRES_USER}}
        POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
        POSTGRES_DB: ${{secrets.POSTGRES_DB}}
      run: pipenv run python manage.py migrate
  
    - name: Test
      env:
        SECRET_KEY: ${{secrets.SECRET_KEY}}
        POSTGRES_HOST: ${{secrets.POSTGRES_HOST}}
        POSTGRES_PORT: ${{secrets.POSTGRES_PORT}}
        POSTGRES_USER: ${{secrets.POSTGRES_USER}}
        POSTGRES_PASSWORD: ${{secrets.POSTGRES_PASSWORD}}
        POSTGRES_DB: ${{secrets.POSTGRES_DB}}
      run: pipenv run python manage.py test


  deploy:
     needs: build
     runs-on: ubuntu-latest

     steps:
     - uses: actions/checkout@v1

     - name: Login to Heroku Container registry
       env:
         HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
       run: heroku container:login

     - name: Build and push
       env:
         HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
       run: heroku container:push -a ${{ secrets.HEROKU_APP_NAME }} web

     - name: Release
       env:
         HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
       run: heroku container:release -a ${{ secrets.HEROKU_APP_NAME }} web

